"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("vue"),t=Object.freeze({__proto__:null});var o={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid"};const i=e.reactive({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:o.defaultButtonConfig,callback:()=>{},error:null}),n=e.reactive({apiLoaded:!1,apiLoadIntitited:!1}),l=new Promise((e=>{const t="undefined"!=typeof window;if(!n.apiLoadIntitited&&t){const t=document.createElement("script");n.apiLoadIntitited=!0,t.addEventListener("load",(()=>{n.apiLoaded=!0,e(window.google)})),t.src=o.library,t.async=!0,t.defer=!0,document.head.appendChild(t)}})),c=t=>{n.apiLoadIntitited?n.apiLoaded?t(window.google):e.watch((()=>n.apiLoaded),(e=>{e&&t(window.google)})):l.then((e=>{t(e)}))},r=(e,t,o,i)=>{if(!e.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");c((()=>{((e,t,o,i,n)=>{if(n){const t=e.callback;e.callback=e=>{e.credential?t&&t(e):n(e)}}window.google.accounts.id.initialize(e);const l=t.value;l&&!i&&window.google.accounts.id.renderButton(l,o)})(e,t,o.buttonConfig,i,o.error),o.prompt&&p({clientId:o.clientId,callback:o.callback,error:o.error,autoLogin:o.autoLogin})}))},a=e=>new Promise(((t,n)=>{c((l=>{if(!(e&&e.clientId||i.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");l.accounts.oauth2.initCodeClient({client_id:e&&e.clientId||i.clientId||"",scope:o.scopes,ux_mode:"popup",callback:e=>{e.code?t(e):n(e)},error_callback:e=>{n(e)}}).requestCode()}))})),d=e=>new Promise(((t,n)=>{c((l=>{if(!(e&&e.clientId||i.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");l.accounts.oauth2.initTokenClient({client_id:e&&e.clientId||i.clientId||"",scope:o.scopes,callback:e=>{e.access_token?t(e):n(e)},error_callback:e=>{n(e)}}).requestAccessToken()}))})),p=e=>{if(!e&&(e={}),!e.clientId&&!i.clientId)throw new Error("clientId is required");const t={};return e.clientId&&(t.client_id=e.clientId),!e.clientId&&i.clientId&&(t.client_id=i.clientId),e.context&&(t.context=e.context),null!=e.autoLogin&&(t.auto_select=e.autoLogin),null!=e.cancelOnTapOutside&&(t.cancel_on_tap_outside=e.cancelOnTapOutside),new Promise(((o,i)=>{t.callback=t=>{e&&e.callback&&e.callback(t),t.credential?o(t):i(t)},c((o=>{o.accounts.id.initialize(t),o.accounts.id.prompt((t=>{e&&e.onNotification&&e.onNotification(t),(e=>{const t=e.notification;let o="";t.isNotDisplayed()&&(o="suppressed_by_user"===t.getNotDisplayedReason()?"Prompt was suppressed by user'. Refer https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown for more info":`Prompt was not displayed, reason for not displaying: ${t.getNotDisplayedReason()}`),t.isSkippedMoment()&&(o=`Prompt was skipped, reason for skipping: ${t.getSkippedReason()}`),o.length&&(e.error?e.error(o):e.reject(o))})({notification:t,reject:i,error:e&&e.error})}))}))}))};var s=e.defineComponent({name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(t){const o=t,n=!!e.useSlots().default,l=((e,t)=>{const o={...e};for(const e in t)void 0!==t[e]&&null!==t[e]&&(o[e]=t[e]);return o})(i,o),c={client_id:l.clientId||null,auto_select:l.autoLogin||!1,callback:l.callback,...l.idConfiguration},p=e.ref();return e.onMounted((()=>{r(c,p,l,n),o.popupType&&!n&&console.warn("Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!")})),(t,o)=>(e.openBlock(),e.createElementBlock("div",{class:"g-btn-wrapper",onClick:o[0]||(o[0]=t=>e.unref(n)&&void("TOKEN"===e.unref(l).popupType?d({clientId:l.clientId}).then((e=>{l.callback&&l.callback(e)})).catch((e=>{l.error&&l.error(e)})):a({clientId:l.clientId}).then((e=>{l.callback&&l.callback(e)})).catch((e=>{l.error&&l.error(e)}))))},[e.unref(n)?e.createCommentVNode("v-if",!0):(e.openBlock(),e.createElementBlock("span",{key:0,ref_key:"buttonRef",ref:p,class:"g-btn"},null,512)),e.renderSlot(t.$slots,"default")]))}});!function(e,t){void 0===t&&(t={});var o=t.insertAt;if(e&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css","top"===o&&i.firstChild?i.insertBefore(n,i.firstChild):i.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}}("\n.g-btn-wrapper[data-v-5e610566] {\n  display: inline-block;\n}\n"),s.__scopeId="data-v-5e610566",s.__file="src/plugin/GoogleLogin.vue";var u={install:(e,t)=>{t&&(e=>{e.clientId&&(i.clientId=e.clientId),e.popupType&&(i.popupType=e.popupType),null!=e.prompt&&(i.prompt=e.prompt),null!=e.autoLogin&&(i.autoLogin=e.autoLogin),e.idConfiguration&&(i.idConfiguration=e.idConfiguration),e.buttonConfig&&(i.buttonConfig=e.buttonConfig),e.callback&&(i.callback=e.callback)})(t),l.then((()=>{if(t.clientId){const e={client_id:t.clientId,auto_select:!0===t.autoLogin,callback:t.callback,use_fedcm_for_prompt:!0,...t.idConfiguration};window.google.accounts.id.initialize(e),t.prompt&&window.google.accounts.id.prompt()}})),e.component("GoogleLogin",s)}};exports.CallbackTypes=t,exports.GoogleLogin=s,exports.decodeCredential=e=>{try{const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),o=decodeURIComponent(atob(t).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(o)}catch(e){throw"JWT provided is invalid"}},exports.default=u,exports.googleAuthCodeLogin=a,exports.googleLogout=()=>{c((e=>{e.accounts.id.disableAutoSelect()}))},exports.googleOneTap=p,exports.googleSdkLoaded=c,exports.googleTokenLogin=d;
